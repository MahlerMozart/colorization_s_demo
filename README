*******************************
カラリゼーションの簡易デモ　　説明書
By Yuki
*******************************

○はじめに
アルゴリズムは以下の論文を参照しました。
Jonathan T. Barron著　The Fast Bilateral Solver
一部の共役勾配法の関数は、以下のページから引用しています。
http://www.slis.tsukuba.ac.jp/~fujisawa.makoto.fu/cgi-bin/wiki/index.php?%CF%A2%CE%A91%BC%A1%CA%FD%C4%F8%BC%B0%A1%A7%B6%A6%CC%F2%B8%FB%C7%DB%CB%A1



○ファイルの内訳
main.cpp		main関数
ICCG.cpp		共役勾配法関連のライブラリ
ICCG.hpp
BilateralGrid.cpp	バイラテラルソルバ用クラス
BilateralGrid.hpp
InputImage.cpp		入力画像作成クラス
InputImage.hpp
CMakeListes.txt		cmakeファイル



○コンパイル方法
opencv2.Xが必要です。
GCC + cmakeを用いた方法でコンパイルしました。
参考：
http://docs.opencv.org/2.4/doc/tutorials/introduction/linux_gcc_cmake/linux_gcc_cmake.html



○実行方法
入力画像として任意のRGB画像(EX:input.png)を用意してください。
拡張子は、pngとjpgで動作確認済みです。

ターミナル上で、以下を実行します。
./DisplayImage input.png

・ステップ１（白黒画像に着色）
ウインドウにグレースケールの入力画像が表示されます。
マウスのクリック&ドラッグで着色。
着色が完了したらEscキーを押す。

・ステップ２（カラリゼーション）
着色した情報をもとに、カラリゼーションを実行します。
出力結果のウインドウが現れます。
ターミナル上には、計算途中のコメントが現れます。
Escキーで終了します。
出力として、
	draw.png
	colorizied.png
をはきだします。


※正しく動作しない場合
・着色の仕方によっては、うまく動作しないことがあります。
　着色方法を工夫してください。
・画像サイズが大きいと計算時間が大きくなります。
　まずは1000*600など、それくらいのサイズで試してください。
・画像によってはアルゴリズムがうまく働かない場合があります。


